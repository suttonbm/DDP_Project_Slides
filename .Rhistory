library(swirl)
swirl()
?qnorm
?binom
?qbinom
runif
?runif
??ppoisson
?ppoisson
?ppoi
?qpois
data(mtcars)
mtcars$am <- factor(mtcars$am)
levels(mtcars$am) <- c("auto", "manual")
finalModel <- lm(mpg ~ am + wt + qsec, data=mtcars)
?confint
?confint.lm
confint.lm(finalModel, level=0.95)
setwd("E:/programming/datasciencecoursera/Developing_Data_Products/Project/DDP_Final_Project")
shiny::runApp()
setwd("E:/programming/datasciencecoursera/Developing_Data_Products/Project/DDP_Final_Project/www")
getwd()
setwd("E:/programming/datasciencecoursera/Developing_Data_Products/Project/DDP_Final_Project/www")
getwd()
install.packages("devtools")
library(devtools)
install_github(c("ramnathv/slidify", "ramnathv/slidifyLibraries"))
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
library(devtools)
install_github(c("ramnathv/slidify", "ramnathv/slidifyLibraries"))
getwd()
setwd("E:/programming/datasciencecoursera/Developing_Data_Products/Project/DDP_Final_Project/pitch")
library(slidify)
author("suttonbm")
getwd()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
getwd()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
getwd()
slidify("index.Rmd")
getwd()
slidify("index.Rmd")
?paste
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?dev.new
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish('Earthquake Visualizer', 'index.html', host='rpubs')
